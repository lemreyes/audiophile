// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int             @id @default(autoincrement())
  slug          String
  name          String
  image         Image[]
  category      String
  categoryImage CategoryImage[]
  new           Boolean
  price         Int
  description   String
  features      String
  inclusions    Inclusions[]
  gallery       GalleryImage[]
  otherProducts OtherProducts[]
  created_at    DateTime
  updated_at    DateTime
}

model Image {
  id         Int      @id @default(autoincrement())
  mobileSrc  String
  tabletSrc  String
  desktopSrc String
  Product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  created_at DateTime
  updated_at DateTime
}

model CategoryImage {
  id         Int      @id @default(autoincrement())
  mobileSrc  String
  tabletSrc  String
  desktopSrc String
  Product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  created_at DateTime
  updated_at DateTime
}

model GalleryImage {
  id         Int      @id @default(autoincrement())
  order      Int
  mobileSrc  String
  tabletSrc  String
  desktopSrc String
  Product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  created_at DateTime
  updated_at DateTime
}

model OtherProducts {
  id              Int                   @id @default(autoincrement())
  Product         Product               @relation(fields: [parentProductId], references: [id])
  parentProductId Int
  productId       Int
  image           OtherProductsImages[]
  created_at      DateTime
  updated_at      DateTime
}

model OtherProductsImages {
  id              Int           @id @default(autoincrement())
  mobileSrc       String
  tabletSrc       String
  desktopSrc      String
  OtherProducts   OtherProducts @relation(fields: [otherProductsId], references: [id])
  otherProductsId Int
  created_at      DateTime
  updated_at      DateTime
}

model Inclusions {
  id         Int      @id @default(autoincrement())
  Product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  item       String
  quantity   Int
  created_at DateTime
  updated_at DateTime
}

model Customer {
  id          Int           @id @default(autoincrement())
  name        String
  email       String
  phone       String
  address     String
  zipcode     String
  city        String
  country     String
  transaction Transaction[]
  created_at  DateTime
  updated_at  DateTime
}

model Transaction {
  id            Int           @id @default(autoincrement())
  Customer      Customer      @relation(fields: [customerId], references: [id])
  customerId    Int
  paymentMethod PaymentMethod
  eMoneyNumber  String?
  eMoneyPin     String?
  shippingFee   Float
  vatRate       Float
  created_at    DateTime
  updated_at    DateTime
}

model OrderItem {
  id         Int      @id @default(autoincrement())
  productId  Int
  quantity   Int
  created_at DateTime
  updated_at DateTime
}

enum ImageFor {
  MOBILE
  TABLET
  DESKTOP
}

enum PaymentMethod {
  EMONEY
  COD
}
